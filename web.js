var XMLHttpRequest = require('xhr2');

/// Class of objects used to contain the data pulled from the web.
class WebResource {
    constructor() {
        this.data = null;
        this.meta = null;
        this.status = 0;
    }
}

/// Promises a WebResource object carrying the data from a specified URL.
function promiseResource(URL) {

    return new Promise(function(resolve, reject) {

        /// Declare the resource that is being promised.
        var resource = new WebResource();
        resource.meta.URL = URL;

        /// Send the request.
        var request = new XMLHttpRequest();
        request.open('GET', URL);
        request.send();

        /// Set a timeout for failure.
        setTimeout(function() {
            reject(resource);
        }, 10000);

        /// Receive the data and resolve the promise.
        request.onload = function() {
            resource.status = response.status;
            resource.data = request.response;
            resolve(resource);
        }

        /// Handle failed requests.
        request.onerror = function() {
            resource.status = response.status;
            resolve(resource);
        }

    });

}

/// Promises all the WebResources generated by an array of URLs.
function promiseAllResources(URLs) {

    var promisedResourceArray = [];
    for (var URL of URLs) promisedResourceArray.push(promiseResource(URL));
    return Promise.all(promisedResourceArray);
    
}

module.exports = {
    WebResource,
    promiseResource,
    promiseAllResources
}